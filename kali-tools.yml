---
# Deploy tools not found in the Kali repositories
- hosts: all
  become: true
  tasks:
    # Install VSCode
    - name: Install MS Visual Studio Code
      ansible.builtin.include_role:
        name: "ansible-role-vscode"

    # Clone git repos
    - name: Clone git repositories
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "/opt/{{ item.name }}"
        version: "{{ item.version | default('master') }}"
        depth: 1
        force: true
      loop: "{{ git_repos | flatten(levels=1) }}"

    # Clone wordlist repos
    - name: Clone wordlist repositories
      when: wordlists|bool == true
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "/usr/share/wordlists/{{ item.name }}"
        version: "{{ item.version | default('master') }}"
        depth: 1
        force: true
      loop: "{{ wordlist_repos | flatten(levels=1) }}"

    # Miscellaneous tools
    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ item.dest | dirname }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      loop: "{{ misc_downloads }}"
            
    - name: Download files
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest | dirname }}/{{ item.url | basename }}"
        owner: root
        group: root
        mode: "{{ item.mode | default('0755') }}"
      loop: "{{ misc_downloads }}"

    # Install, configure, and link tools to /usr/local/bin
    - name: Install Eavesarp
      ansible.builtin.command: chdir=/opt/eavesarp {{ item }}
      with_items:
        - "python3 -m pip install -r requirements.txt"
    - name: Link Eavesarp
      ansible.builtin.file:
        src: "/opt/eavesarp/eavesarp.py"
        dest: "/usr/local/bin/eavesarp"
        state: link
        mode: 0755
    - name: Link PCredz
      ansible.builtin.file:
        src: "/opt/pcredz/Pcredz"
        dest: "/usr/local/bin/pcredz"
        state: link
        mode: 0755
    - name: Link Unicorn
      ansible.builtin.file:
        src: "/opt/unicorn/unicorn.py"
        dest: "/usr/local/bin/unicorn"
        state: link
    - name: Build Qmodbus
      ansible.builtin.command: "{{ item }}"
      loop:
        - mkdir -p /opt/qmodbus/build
        - qmake /opt/qmodbus -o /opt/qmodbus/build/Makefile
        - make --directory=/opt/qmodbus/build
      tags: qmodbus
    - name: Link Qmodbus
      ansible.builtin.file:
        src: "/opt/qmodbus/build/qmodbus"
        dest: "/usr/local/bin/qmodbus"
        state: link
        mode: 0755
      tags: qmodbus
    - name: Build Bettercap
      ansible.builtin.command: chdir=/opt/bettercap {{ item }}
      with_items:
        - "go install"
        - "go build"
      tags: bettercap
    - name: Replace bettercap
      ansible.builtin.copy:
        src: "/opt/bettercap/bettercap"
        dest: "/usr/bin/bettercap"
        owner: root
        group: root
        mode: 0755
      tags: bettercap
    - name: Update Bettercap Modules
      ansible.builtin.command: bettercap -eval 'caplets.update; ui.update; q'
      tags: bettercap
    - name: Unzip CrackMapExec (overwrite)
      unarchive:
        src: "{{ item }}"
        dest: /usr/bin/
        copy: no
      loop:
        - /opt/crackmapexec/cme-ubuntu-latest-3.11.zip
        - /opt/crackmapexec/cmedb-ubuntu-latest-3.11.zip
      tags: crackmapexec
    - name: Set Mode for CrackMapExec
      ansible.builtin.file:
        path: "{{ item }}"
        mode: '0755'
      loop:
        - /usr/bin/cme
        - /usr/bin/cmedb
      tags: crackmapexec
    - name: Link CME (convenience alias)
      ansible.builtin.file:
        src: "/usr/bin/cme"
        dest: "/usr/bin/crackmapexec"
        state: link
        mode: 0755
        force: yes
      tags: crackmapexec
